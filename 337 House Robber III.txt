/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int rob(TreeNode* root) {
        return help(root,true);
    }
    int help(TreeNode* root, bool rob){
        if (!(root)) return 0;
        if (!(rob)) return help(root->left,true)+help(root->right,true);
        int profit1 = root->val+help(root->left,false)+help(root->right,false);
        int profit2 = help(root->left,true)+help(root->right,true);
        return max(profit1,profit2);
    }
};

comment:
return max of two profit: one include itself and prohibit next, one exclude itself
recursively