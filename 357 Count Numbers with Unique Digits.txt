import math
class Solution:
    def countNumbersWithUniqueDigits(self, n):
        """
        :type n: int
        :rtype: int
        """
        if n>10: n=10
        if n==0: return 1
        return int(self.P(10,n)*0.9)+self.countNumbersWithUniqueDigits(n-1)
    def P(self,m,n):
        ans = 1
        for i in range(m-n+1,m+1):
            ans*=i
        return ans
        
comment:
The permutation of 10 number in x length decides # of unique number in x length
each time calculate a length number and multiply 90%(except zero first)