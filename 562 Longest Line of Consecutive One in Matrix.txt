class Solution:
    def longestLine(self, M):
        """
        :type M: List[List[int]]
        :rtype: int
        """
        long = 0
        cur = 0
        if len(M)==0 or len(M[0])==0: return 0
        for i in range(len(M)):
            for j in range(len(M[0])):
                if M[i][j]:cur+=M[i][j]
                else:
                    long=max(long,cur)
                    cur=0
            long=max(long,cur)
            cur=0
        for j in range(len(M[0])):
            for i in range(len(M)):
                if M[i][j]:cur+=M[i][j]
                else:
                    long=max(long,cur)
                    cur=0
            long=max(long,cur)
            cur=0
        for i in range(len(M)):
            j = 0
            while i+j < len(M) and j<len(M[0]):
                if M[i+j][j]:cur+=M[i+j][j]
                else:
                    long=max(long,cur)
                    cur=0
                j+=1
            long = max(long,cur)
            cur = 0
        for j in range(len(M[0])):
            i = 0
            while i<len(M) and i+j <len(M[0]):
                if M[i][i+j]:cur+=M[i][i+j]
                else:
                    long=max(long,cur)
                    cur=0
                i+=1
            long = max(long,cur)
            cur = 0
        for i in range(len(M)):
            j = 0
            while i-j>0 and j<len(M[0]):
                if M[i-j][j]:cur+=M[i-j][j]
                else:
                    long=max(long,cur)
                    cur=0
                j+=1
            long = max(long,cur)
            cur=0
        for j in range(len(M[0])):
            i = 0
            while i<len(M) and i+j<len(M[0]):
                if M[len(M)-i-1][i+j]:cur+=M[len(M)-i-1][i+j]
                else:
                    long=max(long,cur)
                    cur=0
                i+=1
            long = max(long,cur)
            cur = 0       
        return long
        
check all row,col,lean one by one